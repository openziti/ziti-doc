name: periodic-broken-link-checks

on:
  workflow_call:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/check-links.yml
  issue_comment:
    types: [created, edited]
jobs:
  extract-url:
    runs-on: ubuntu-latest
    outputs:
      URL_TO_CHECK: ${{ steps.extract.outputs.URL_TO_CHECK }}
    steps:
      - name: Extract Preview URL
        id: extract
        run: |
          url=$(grep -oP '\[Visit Preview\]\(\K[^)]+' <<< "$COMMENT_BODY" || true)
          echo "URL_TO_CHECK=${url:-https://openziti.io}" >> $GITHUB_OUTPUT
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
  broken-link-checker:
    if: >
      ${{
        github.repository_owner == 'openziti' &&
        (
          (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
          (
            github.event_name == 'issue_comment' &&
            github.event.comment.user.login == 'vercel' &&
            github.event.comment.user.type == 'Bot' &&
            contains(github.event.comment.body, 'Ready')
          )
        )
      }}
    needs: extract-url
    runs-on: ubuntu-latest
    env:
      URL_TO_CHECK: ${{ needs.extract-url.outputs.URL_TO_CHECK }}
    steps:
      - name: Checkout Workspace
        uses: actions/checkout@v4

      - name: Echo URL
        run: |
          echo "URL_TO_CHECK is: $URL_TO_CHECK"

      - name: Crawl for Broken Links
        run: ./check-links/crawl-for-broken-links.sh "$URL_TO_CHECK"
          
      - name: Resolve Alarm Issue if Links are Not Broken
        if: ${{ success() }}
        uses: netfoundry/close-matching-issues@v4
        with:
          query: 'is:open label:bug in:title "Broken Links Alarm"'
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Raise an Alarm Issue if Links are Broken
        if: ${{ failure() }}
        uses: JasonEtco/create-an-issue@v2.9.1
        with:
          update_existing: true
          search_existing: open
          filename: ./check-links/check-links-issue-template.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  popular-link-checker:
    if: >
      ${{
        needs.extract-url.outputs.URL_TO_CHECK != '' &&
        github.repository_owner == 'openziti' &&
        (
          (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
          (
            github.event_name == 'issue_comment' &&
            github.event.comment.user.login == 'vercel' &&
            github.event.comment.user.type == 'Bot' &&
            contains(github.event.comment.body, 'Ready')
          )
        )
      }}
    needs: extract-url
    runs-on: ubuntu-latest
    env:
      URL_TO_CHECK: ${{ needs.extract-url.outputs.URL_TO_CHECK }}
    steps:
      - name: Checkout Workspace
        uses: actions/checkout@v4
        
      - name: Echo URL
        run: |
          echo "URL_TO_CHECK is: $URL_TO_CHECK"
          
      - name: Check popular links to new docs site
        run: ./check-links.sh $URL_TO_CHECK ./popular-docs-links.txt
        working-directory: ./check-links/
        
      - name: Resolve Alarm Issue if Links are Not Broken
        if: ${{ success() }}
        uses: netfoundry/close-matching-issues@v4
        with:
          query: 'is:open label:bug in:title "Popular Links Alarm"'
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Raise an Alarm Issue if Links are Broken
        if: ${{ failure() }}
        uses: JasonEtco/create-an-issue@v2.9.1
        with:
          update_existing: true
          search_existing: open
          filename: ./check-links/popular-links-issue-template.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
